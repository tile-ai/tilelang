[project]
name = "tilelang"
dependencies = [
    "Cython>=3.0.0",
    "numpy>=1.23.5",
    "tqdm>=4.62.3",
    "typing_extensions>=4.10.0",
    "cloudpickle",
    "ml_dtypes",
    "psutil",
    "torch",
]
requires-python = ">=3.8"
dynamic = ["version"]

[project.optional-dependencies]
# mldtypes should be greater than 0.5.1
# if you want to enable fp4
fp4 = ["ml_dtypes>=0.5.1"]

[build-system]
requires = [
    "setuptools>=61",
    "Cython>=3.0.0",
    "scikit-build-core",
    "setuptools",
]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
wheel.py-api = "cp38"
cmake.version = ">=3.26.1"

# Include backend and git info in version
metadata.version.provider = "version_provider"
metadata.version.provider-path = "."
experimental = true

[tool.scikit-build.wheel.packages]
tilelang = "tilelang"
"tilelang/src" = "src"
"tilelang/3rdparty" = "3rdparty"

# TODO: we might want to not include these in wheel?
"tilelang/benchmark" = "benchmark"
"tilelang/examples" = "examples"
"tilelang/testing" = "testing"

[tool.yapf]
based_on_style = "yapf"
column_limit = 100
indent_width = 4

[tool.codespell]
ignore-words-list = "nd, te, ist, LOD, offen, NotIn, HSA"
skip = [
    "build",
    "3rdparty",
    "dist",
    ".venv"
]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E", "W",
    # Pyflakes
    "F",
    # pyupgrade
    # "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    # "I",
]
ignore = [
    # Module level import not at top of file
    "E402",
    # star imports
    "F405", "F403",
    # ambiguous name
    "E741",
    # line too long
    "E501",
    # key in dict.keys()
    "SIM118",
    # memory leaks
    "B019",
    # No such file or directory
    "E902",
]
[tool.ruff.lint.per-file-ignores]
"3rdparty/**/*" = ["ALL"]
"examples/deepseek_v32/inference/**/*" = ["ALL"]