name: Dist
on:
  pull_request:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      cuda_version:
        description: 'CUDA Version to build, format: xx.y'
        required: false
      git_version:
        description: 'Include git commit in package version'
        required: false
        type: boolean
        default: true
      toolchain_version:
        description: 'Include toolchain information in package version'
        required: false
        type: boolean
        default: true

env:
  PYTHON_VERSION: '3.12'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-wheels:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-22.04-arm, macos-14]
        include:
        - os: ubuntu-22.04
          CUDA_VERSION: 12.1
        - os: ubuntu-22.04-arm
          CUDA_VERSION: 12.8
      fail-fast: true
    runs-on: ${{ matrix.os }}
    env:
      CUDA_VERSION: ${{ inputs.cuda_version || matrix.CUDA_VERSION }}
      NO_GIT_VERSION: ${{ github.event_name != 'release' && ! inputs.git_version }}
      NO_TOOLCHAIN_VERSION: ${{ github.event_name != 'release' && ! inputs.toolchain_version }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Build wheels
      uses: pypa/cibuildwheel@v3.2
      with:
        output-dir: wheelhouse
        config-file: "{package}/pyproject.toml"

    # just for now to list all files
    - name: List wheels
      id: ls-whl
      run: echo "whl_name=$(ls wheelhouse | head -n1)" >> $GITHUB_OUTPUT

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.ls-whl.outputs.whl_name }}.zip
        path: wheelhouse/${{ steps.repair.outputs.whl_name }}
        compression-level: 0
