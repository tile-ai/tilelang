name: Dist
on: [pull_request]

env:
  PYTHON_VERSION: '3.12'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-wheel-linux:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-22.04-arm]
        image:
        - nvidia/cuda:12.9.1-cudnn-devel-ubuntu20.04
        - nvidia/cuda:13.0.1-cudnn-devel-ubuntu22.04
        # rocm image is too large for Github Actions
        # - rocm/dev-ubuntu-22.04:6.4.4-complete
        # exclude:
        # - os: ubuntu-22.04-arm
        #   image: rocm/dev-ubuntu-22.04:6.4.4-complete
      fail-fast: true
      max-parallel: 1  # try to reuse cache
    runs-on: ${{ matrix.os }}
    container:
      image: ${{ matrix.image }}
    env:
      UV_LINK_MODE: copy
    steps:
    - name: Setup
      run: |
        apt-get update
        apt-get install -y git

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: recursive

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        create-symlink: true
        key: ${{ github.job }}-${{ matrix.os }}

    - name: Install python via uv
      uses: astral-sh/setup-uv@v6
      with:
        activate-environment: true
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Build wheel
      run: |
        uv pip install build wheel
        python -mbuild -w

    - name: Repair wheel on Linux
      id: repair
      run: |
        uv pip install auditwheel patchelf
        auditwheel repair \
            -L /lib \
            --exclude libcuda.so.1 --exclude /usr/local/cuda\* \
            --exclude /opt/amdgpu\* --exclude /opt/rocm\* \
            dist/*.whl
        echo "whl_name=$(ls wheelhouse)\n" >> $GITHUB_OUTPUT

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.repair.outputs.whl_name }}.zip
        path: wheelhouse/${{ steps.repair.outputs.whl_name }}
        compression-level: 0

  build-wheel-macos:
    strategy:
      matrix:
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: recursive

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        create-symlink: true
        key: ${{ github.job }}-${{ matrix.os }}

    - name: Install python via uv
      uses: astral-sh/setup-uv@v6
      with:
        activate-environment: true
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Build wheel
      run: |
        uv pip install build wheel
        python -mbuild -w

    - name: Repair wheel on Darwin
      id: repair
      run: |
        uv pip install delocate
        delocate-wheel -w wheelhouse -v dist/*
        echo "whl_name=$(ls wheelhouse)\n" >> $GITHUB_OUTPUT

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.repair.outputs.whl_name }}.zip
        path: wheelhouse/${{ steps.repair.outputs.whl_name }}
        compression-level: 0
