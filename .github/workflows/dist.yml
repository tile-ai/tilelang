name: Dist
on:
  schedule:
    # gemini said this is 6:00 china time
    - cron: "0 22 * * *"
  release:
    types:
      - published

permissions:
  contents: read

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build-wheels:
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, macos-26]
        python-version:
          - "3.8"
          # Wait for tvm fix
          # - "3.9"
          # - "3.10"
          # - "3.11"
          # - "3.12"
          # - "3.13"
          # - "3.14"
        include:
          - os: ubuntu-24.04
            cuda-version: "12.1"
          - os: ubuntu-24.04-arm
            cuda-version: "12.8"
      fail-fast: true
    runs-on: ${{ matrix.os }}
    env:
      CUDA_VERSION: ${{ matrix.cuda-version || '' }}
      NO_VERSION_LABEL: ${{ github.event_name == 'release' && 'OFF' || 'ON' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      # NB: CIBW builds wheels in containers on Linux
      - name: Setup ccache (macOS only)
        if: runner.os == 'macOS'
        uses: hendrikmuhs/ccache-action@v1
        with:
          create-symlink: true
          key: ccache-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}-${{ matrix.cuda-version || 'nocuda' }}
          evict-old-files: "7d"

      - name: Set CIBW_BUILD
        run: |
          PYTHON_VERSION="${{ matrix.python-version }}"
          PYTHON_VERSION_MAJMIN="$(echo "${PYTHON_VERSION}" | cut -d '.' -f-2)"
          PYTHON_VERSION_MAJMIN_NODOT="${PYTHON_VERSION_MAJMIN//./}"
          echo "CIBW_BUILD=cp${PYTHON_VERSION_MAJMIN_NODOT}-*" | tee -a "${GITHUB_ENV}"

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2
        with:
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      # just for now to list all files
      - name: List wheels
        id: ls-whl
        run: echo "whl_name=$(ls wheelhouse | head -n1)" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.ls-whl.outputs.whl_name }}.zip
          path: wheelhouse/${{ steps.ls-whl.outputs.whl_name }}
          compression-level: 0
