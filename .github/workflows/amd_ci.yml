name: AMD CI
on: [pull_request]

env:
  PYTHON_VERSION: '3.12'
  VENV_DIR: tilelang_ci

jobs:

  build-test:
    runs-on: [self-hosted, amd, gpu]
    permissions:
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        repository: ${{ github.event.pull_request.head.repo.full_name }}
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Ensure venv (local & persistent)
      run: |
        set -e
        REQS_HASH=$(cat requirements-test.txt 2>/dev/null || true)
        MARKER="${{ runner.tool_cache }}/.venv_marker_${{ env.PYTHON_VERSION }}_${REQS_HASH:0:8}"
        
        cp -r /usr/local/lib/python3.12/dist-packages/torch ${{ runner.tool_cache }}/${{ env.VENV_DIR }}/lib/python3.12/site-packages/
        cp -r /usr/local/lib/python3.12/dist-packages/torchvision ${{ runner.tool_cache }}/${{ env.VENV_DIR }}/lib/python3.12/site-packages/

        if [[ -f "$MARKER" ]] && [[ -f "${{ runner.tool_cache }}/${{ env.VENV_DIR }}/bin/activate" ]]; then
          echo "venv exists and hash matches – reuse it"
        else
          echo "venv stale or missing – recreating"
          rm -rf "${{ runner.tool_cache }}/${{ env.VENV_DIR }}" "$MARKER"
          python -m venv "${{ runner.tool_cache }}/${{ env.VENV_DIR }}"
          source "${{ runner.tool_cache }}/${{ env.VENV_DIR }}/bin/activate"
          python -m pip install --upgrade pip --no-user
          if [[ -f requirements-test.txt ]]; then
            echo "Removing 'flash-attn' from requirements before installing..."
            sed -i '/flash-attn/d' requirements-test.txt
            PIP_NO_BUILD_ISOLATION=1 pip install -r requirements-test.txt --no-user
          fi

          USE_ROCM=True pip install . --no-user
          touch "$MARKER"
        fi

    - name: Install project (wheel form)
      run: |
        source "${{ runner.tool_cache }}/${{ env.VENV_DIR }}/bin/activate"
        USE_ROCM=True pip install . --no-user

    - name: Run tests
      run: |
        source "${{ runner.tool_cache }}/${{ env.VENV_DIR }}/bin/activate"
        cd testing/python/amd
        unset PYTHONPATH
        python -m pytest -v test_tilelang_test_amd.py